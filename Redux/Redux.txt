TT [npm i redux react-redux(work redux with react)].

Redux is pattern & library used for state management/manage & update the applications state, using events called actions.
It serves as a centralized store for state that need to be used across our entire application, with rules ensuring that state can only be updated in a predictable fashion(we had an idea which component had previous data & updated data).

3 Things =>
1. Action(What to do?)
2. Reducer(How to do?)
3. Store(object which holds the state of the application).
4. Functions associated with Store -
createStore(); dispatch(action); getState(); 


1. Action => It are plain JS objects that have a type field. Actions only tell what to do, but they dont tell how to do.

1.1. Action Creator => Pure function which creates an action.

2. Reducer => It are functions that take current state and an actions as arguments, & return a new state result.

3. Store => It brings together state, actions, & reducers that make app. We will have only single store in redux application & Every Redux store we will have a single root reducer function.


We had useSelecter in Redux & hooks we had useContext.
To Trigger action with reducer we use useDispatch.